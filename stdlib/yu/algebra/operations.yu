import "yu/basic/Equal.yu"
import "yu/Prod/Prod.yu"


val IsAssociative [A : Ty] : (A & A -> A) -> Ty
let f => (x y z : A) -> f x (f y z) = f (f x y) z


val HasLeftUnit [A : Ty] : (A & A -> A) & A -> Ty
let f u => (x : A) -> f u x = x


val HasRightUnit [A : Ty] : (A & A -> A) & A -> Ty
let f u => (x : A) -> f x u = x


val HasUnit [A : Ty] : (A & A -> A) & A -> Ty
let f u => HasLeftUnit f u && HasRightUnit f u
