import "yu/Str/Str.yu"


## TODO When effects are implemented, this should be effectful, since it may fail.
extern _.print\Char : Char ->> {}

val _.println\Char : Char ->> {}
let c => c .print; 'lf .print


val _.print\Str : Str ->> {}
let str => aux (str .list)
where
  val aux : List Char ->> {}
  let nil => ()
  let (c :: cs) => c .print; aux cs
end

val _.println\Str : Str ->> {}
let s => s .print; 'lf .print


val _.print\Bool : Bool ->> {}
let b => b .str .print

val _.println\Bool : Bool ->> {}
let b => b .print; 'lf .print


val _.print\Nat : Nat ->> {}
let n => n .str .print

val _.println\Nat : Nat ->> {}
let n => n .print; 'lf .print


val _.print\List [A : Ty] : List A & (A -> Str) & Str ->> {}
let xs f s => xs .str f s .print

val _.println\List [A : Ty] : List A & (A -> Str) & Str ->> {}
let xs f s => xs .print f s; 'lf .print
