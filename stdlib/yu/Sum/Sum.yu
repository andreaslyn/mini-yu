
data Sum : Ty & Ty -> Ty
of in1 [A B : Ty] : A -> A || B
of in2 [A B : Ty] : B -> A || B


val (||#Ty) : Ty & Ty -> Ty
let => Sum


val (>>=#Sum) [A B C : Ty] : A || B & (B -> A || C) -> A || C
let (in1 x) _ => in1 x
let (in2 y) f => f y
