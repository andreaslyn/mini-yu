import Mon => yu/algebra/Monoid
| IsMonoid
| Monoid

import basic => yu/basic
| (...)

import Prod => yu/Prod/Prod
| ($#)

import N-th => yu/Nat/theorems


val isMonoid+ : IsMonoid Nat
let =>
  mkIs.Mon (+) 0
    (k m n => ! associativeOp+.N-th)
    ((n => simpl0Op+.N-th) $ of n => refl)


val monoid+ : Monoid
let => mk.Mon isMonoid+
