import "/yu0/Bin1.yu"
import "/yu0/Prod.yu"


val not-reflexive-op<.Bin1 [a : Bin1] : not (a < a)
let (step<.Bin1 h) => not-reflexive-op<.Bin1 h


val inj-bin+[a : Bits] [b : Bits] : bin+ a = bin+ b -> a = b
let refl => refl


val.. step-op++op<.Bin1 [b : Bin1]
  : (a : Bin1) & ++ a < b -> a < -- b
let a h => step-op++op<.Bin1 a h
