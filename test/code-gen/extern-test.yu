import "yu/prelude/prelude.yu"


extern (!_\) : Bool ->> Bool


extern len : (A : Ty) & List A -> Nat


val main : {} ->> {}
let () =>
  case (!_\) true
  | false => '1 .println
  | true => '0 .println
  end;
  case len Nat (0 :: 0 :: 0 :: nil)
  | 0 => "0\n" .print
  | _ => "1\n" .print
  end
