import yu/prelude
| (...)

import L => yu/List

import yu/Ordering?
| Ordering?
| (...#Ordering?)


val.. (.quicksort#List)[A : Ty] : List A & Ordering? A -> List A
let nil.L _ => nil.L
let (x :: xs) cmp =>
  xs .filter (cmp .lt? _ x) .quicksort cmp
  :+: (x :: nil.L)
  :+: xs .filter (cmp .ge? _ x) .quicksort cmp
