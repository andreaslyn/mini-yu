import "yu/prelude.yu"
import "yu/Stream.yu"


val alternate[A : Ty] : (A, A) -> A Stream
let (a1, a2) => alt1
where
  val.. alt1 : A Stream
  let => a1 :: alt2

  val.. alt2 : A Stream
  let => a2 :: alt1
end


val main : () ->> Unit
let () =>
  alternate(0, 1) takeList!(10) str(_str, ", ") println
